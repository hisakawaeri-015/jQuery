CSS操作
------------------------------------------------------------------------
→class属性を操作することで、あらかじめ用意したスタイルを適用／削除すること
①CSSファイルにあらかじめスタイルを指定したclassを用意しておく
②用意しておいたclassをjQueryから追加することでスタイルを適用させる
--------------------------------------------------------------------
★class属性を操作するメソッド	◆意味
★addClass()	　　　　　　　　◆指定要素にclass属性を追加する
★removeClass()	　　　　　　　◆指定要素からclass属性を削除する
★toggleClass()	　　　　　　　◆指定要素に対してclass属性の追加／削除を切り替える
★hasClass()	　　　　　　　　◆指定要素に特定のclass属性があるかどうかを確認する
-------------------------------------------------------------------------------
★addClass()メソッド
前章ではjQueryからCSSを操作する方法としてcss()メソッドを学びましたが、
あらかじめ用意されているclassを利用する方法もあります。
------------------------------------
$('セレクタ').addClass('クラス名');
-----------------------------------
<!DOCTYPE html>
<html lang="ja">

<head>
  <meta charset="UTF-8">
  <title>class属性の操作</title>
  <link rel="stylesheet" href="css/class-operation.css">
</head>

<body>
  <p id="target">class属性の操作を理解しよう</p>
  <button id="add">addClass</button>
  <button id="remove">removeClass</button>
  <button id="toggle">toggleClass</button>
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="js/class-operation.js"></script>
</body>

</html>
---------------------
CSS
 .sample {
   color: red;
   background-color: black;
 }

--------------------------------------------------------------
$(function() {
   // id属性がaddの要素がクリックされたら
   $('#add').on('click', function(){
     // id属性がtargetの要素にclass属性'sample'を追加
     $('#target').addClass('sample');
   });
 
   // id属性がremoveの要素がクリックされたら
   $('#remove').on('click', function(){
     // id属性がtargetの要素からclass属性'sample'を削除
     $('#target').removeClass('sample');
   });
   // id属性がtoggleの要素がクリックされたら
   $('#toggle').on('click', function(){
     // id属性がtargetの要素にclass属性'sample'を追加／削除する
     $('#target').toggleClass('sample');
   });
});

-------------------------------------------------------------


★removeClass()メソッド
----------------------------------------------------------
$('セレクタ').removeClass('クラス名');
----------------------------------------------------------
$(function() {
  // id属性がaddの要素がクリックされたら
  $('#add').on('click', function(){
    // id属性がtargetの要素にclass属性'sample'を追加
    $('#target').addClass('sample');
  });

  $('#remove').on('click',function(){
    // id属性がtargetの要素にclass属性'sample'を削除
    $('#target').removeClass('sample');
  });
});
----------------------------------------------------------
★toggleClass()メソッド
$('セレクタ').toggleClass('クラス名');
toggleClass()は、addClass()メソッドと removeClass()メソッドの機能を切り替えるメソッドです。
「class属性があれば削除し、なければ追加する」というように、class属性の追加／削除を切り替えられます。

$(function() {
  // id属性がtoggleの要素がクリックされたら
  $('#toggle').on('click', function(){
    // id属性がtargetの要素にclass属性'sample'を切り替え
    $('#target').toggleClass('sample');
  });
});
---------------------------------------------------------------
★hasClass()メソッド
$('セレクタ').hasClass('クラス名');


$(function() {
  // id属性がtoggleの要素がクリックされたら
  $('#toggle').on('click', function(){
    // id属性がtargetの要素にclass属性'sample'を切り替え
    $('#target').toggleClass('sample');
  });

  //hasClassボタンをクリックしたとき
  $('#has').on('click', function(){
    // id属性がtargetの要素にclass属性'sample'があるか取得する
    let result = $('#target').hasClass('sample');

     // 条件分岐してconsole.logを表示する
    if(result) {
      console.log('sampleクラスがあります');
    } else {
      console.log('sampleクラスがありません');     }
  });
});





























